==31508== Memcheck, a memory error detector
==31508== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==31508== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==31508== Command: ./a.out images/corrupt-testcases/06-bad-comment-len.ee264 student-out-20_-
==31508== Parent PID: 31506
==31508== 
--31508-- 
--31508-- Valgrind options:
--31508--    --tool=memcheck
--31508--    --leak-check=full
--31508--    --verbose
--31508--    --log-file=memcheck-20.log
--31508-- Contents of /proc/version:
--31508--   Linux version 2.6.32-504.23.4.el6.x86_64 (mockbuild@x86-029.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-9) (GCC) ) #1 SMP Fri May 29 10:16:43 EDT 2015
--31508-- Arch and hwcaps: AMD64, amd64-sse3-cx16-avx
--31508-- Page sizes: currently 4096, max supported 4096
--31508-- Valgrind library directory: /usr/lib64/valgrind
--31508-- Reading syms from /tmp/.FsUH1b/a.out
--31508-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--31508--    object doesn't have a dynamic symbol table
--31508-- Reading syms from /lib64/ld-2.12.so
--31508--   Considering /usr/lib/debug/.build-id/5b/eb2450b75e84ff317c65f22af8b8112c25df63.debug ..
--31508--   .. build-id is valid
--31508-- Scheduler: using generic scheduler lock implementation.
--31508-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==31508== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-31508-by-vkarthi-on-ecegrid-thin5.ecn.purdue.edu
==31508== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-31508-by-vkarthi-on-ecegrid-thin5.ecn.purdue.edu
==31508== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-31508-by-vkarthi-on-ecegrid-thin5.ecn.purdue.edu
==31508== 
==31508== TO CONTROL THIS PROCESS USING vgdb (which you probably
==31508== don't want to do, unless you know exactly what you're doing,
==31508== or are doing some strange experiment):
==31508==   /usr/lib64/valgrind/../../bin/vgdb --pid=31508 ...command...
==31508== 
==31508== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==31508==   /path/to/gdb ./a.out
==31508== and then give GDB the following command
==31508==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=31508
==31508== --pid is optional if only one valgrind process is running
==31508== 
--31508-- REDIR: 0x368b8176d0 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--31508-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--31508-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--31508-- REDIR: 0x368b8174e0 (index) redirected to 0x4a07c30 (index)
--31508-- REDIR: 0x368b817560 (strcmp) redirected to 0x4a08570 (strcmp)
--31508-- Reading syms from /lib64/libc-2.12.so
--31508--   Considering /usr/lib/debug/.build-id/c7/df056b7c109a41096296cd70702f2eada124b0.debug ..
--31508--   .. build-id is valid
--31508-- REDIR: 0x368bc84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--31508-- REDIR: 0x368bc86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--31508-- REDIR: 0x368bc82c40 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--31508-- REDIR: 0x368bc7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--31508-- REDIR: 0x368bd28350 (__strcmp_sse42) redirected to 0x4a084d0 (strcmp)
--31508-- REDIR: 0x368bc81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--31508-- REDIR: 0x368bd33620 (__strlen_sse42) redirected to 0x4a07f90 (strlen)
--31508-- REDIR: 0x368bc8aaf0 (strchrnul) redirected to 0x4a09fb0 (strchrnul)
--31508-- REDIR: 0x368bc84500 (mempcpy) redirected to 0x4a0a020 (mempcpy)
--31508-- REDIR: 0x368bc7b520 (free) redirected to 0x4a063a9 (free)
--31508-- REDIR: 0x368bc7a640 (malloc) redirected to 0x4a069ac (malloc)
--31508-- REDIR: 0x368bc89670 (memcpy) redirected to 0x4a08b60 (memcpy)
==31508== Conditional jump or move depends on uninitialised value(s)
==31508==    at 0x4A063E3: free (vg_replace_malloc.c:446)
==31508==    by 0x400D90: Image_load (answer04.c:150)
==31508==    by 0x401D2C: main (<stdin>:61)
==31508== 
==31508== Conditional jump or move depends on uninitialised value(s)
==31508==    at 0x4A063E3: free (vg_replace_malloc.c:446)
==31508==    by 0x400DA0: Image_load (answer04.c:151)
==31508==    by 0x401D2C: main (<stdin>:61)
==31508== 
==31508== 
==31508== HEAP SUMMARY:
==31508==     in use at exit: 568 bytes in 1 blocks
==31508==   total heap usage: 3 allocs, 2 frees, 1,160 bytes allocated
==31508== 
==31508== Searching for pointers to 1 not-freed blocks
==31508== Checked 65,040 bytes
==31508== 
==31508== LEAK SUMMARY:
==31508==    definitely lost: 0 bytes in 0 blocks
==31508==    indirectly lost: 0 bytes in 0 blocks
==31508==      possibly lost: 0 bytes in 0 blocks
==31508==    still reachable: 568 bytes in 1 blocks
==31508==         suppressed: 0 bytes in 0 blocks
==31508== Reachable blocks (those to which a pointer was found) are not shown.
==31508== To see them, rerun with: --leak-check=full --show-reachable=yes
==31508== 
==31508== Use --track-origins=yes to see where uninitialised values come from
==31508== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
==31508== 
==31508== 1 errors in context 1 of 2:
==31508== Conditional jump or move depends on uninitialised value(s)
==31508==    at 0x4A063E3: free (vg_replace_malloc.c:446)
==31508==    by 0x400DA0: Image_load (answer04.c:151)
==31508==    by 0x401D2C: main (<stdin>:61)
==31508== 
==31508== 
==31508== 1 errors in context 2 of 2:
==31508== Conditional jump or move depends on uninitialised value(s)
==31508==    at 0x4A063E3: free (vg_replace_malloc.c:446)
==31508==    by 0x400D90: Image_load (answer04.c:150)
==31508==    by 0x401D2C: main (<stdin>:61)
==31508== 
--31508-- 
--31508-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--31508-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==31508== 
==31508== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
